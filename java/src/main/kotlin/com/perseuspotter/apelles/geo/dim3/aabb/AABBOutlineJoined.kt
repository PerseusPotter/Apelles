package com.perseuspotter.apelles.geo.dim3.aabb

import com.perseuspotter.apelles.Renderer
import com.perseuspotter.apelles.geo.Frustum
import com.perseuspotter.apelles.geo.Geometry
import com.perseuspotter.apelles.geo.component6
import com.perseuspotter.apelles.geo.component7
import org.lwjgl.opengl.GL11

object AABBOutlineJoined : Geometry() {
    override val name = "aabbOJ"
    override fun render(pt: Double, params: List<Double>) {
        val (_x1, _y1, _z1, _x2, _y2, _z2, _lw) = params
        val (x1, y1, z1, s) = rescale(_x1, _y1, _z1)
        val x2 = x1 + (_x2 - _x1) * s
        val y2 = y1 + (_y2 - _y1) * s
        val z2 = z1 + (_z2 - _z1) * s
        val lw = _lw * s * 0.5 * 0.0625

        begin(GL11.GL_TRIANGLE_STRIP, false, (x1 + x2) * 0.5, (y1 + y2) * 0.5, (z1 + z2) * 0.5)
        if (Renderer.USE_NEW_SHIT) {
            // 0
            addVert(x1 - lw, y1 - lw, z1 - lw)
            addVert(x1 - lw, y1 - lw, z2 + lw)
            addVert(x2 + lw, y1 - lw, z1 - lw)
            addVert(x2 + lw, y1 - lw, z2 + lw)
            // 4
            addVert(x1 + lw, y1 - lw, z1 + lw)
            addVert(x1 + lw, y1 - lw, z2 - lw)
            addVert(x2 - lw, y1 - lw, z1 + lw)
            addVert(x2 - lw, y1 - lw, z2 - lw)
            // 8
            addVert(x1 - lw, y1 + lw, z1 + lw)
            addVert(x1 - lw, y1 + lw, z2 - lw)
            addVert(x1 + lw, y1 + lw, z1 - lw)
            addVert(x1 + lw, y1 + lw, z1 + lw)
            addVert(x1 + lw, y1 + lw, z2 - lw)
            addVert(x1 + lw, y1 + lw, z2 + lw)
            // 14
            addVert(x2 - lw, y1 + lw, z1 - lw)
            addVert(x2 - lw, y1 + lw, z1 + lw)
            addVert(x2 - lw, y1 + lw, z2 - lw)
            addVert(x2 - lw, y1 + lw, z2 + lw)
            addVert(x2 + lw, y1 + lw, z1 + lw)
            addVert(x2 + lw, y1 + lw, z2 - lw)
            // 20
            addVert(x1 - lw, y2 - lw, z1 + lw)
            addVert(x1 - lw, y2 - lw, z2 - lw)
            addVert(x1 + lw, y2 - lw, z1 - lw)
            addVert(x1 + lw, y2 - lw, z1 + lw)
            addVert(x1 + lw, y2 - lw, z2 - lw)
            addVert(x1 + lw, y2 - lw, z2 + lw)
            // 26
            addVert(x2 - lw, y2 - lw, z1 - lw)
            addVert(x2 - lw, y2 - lw, z1 + lw)
            addVert(x2 - lw, y2 - lw, z2 - lw)
            addVert(x2 - lw, y2 - lw, z2 + lw)
            addVert(x2 + lw, y2 - lw, z1 + lw)
            addVert(x2 + lw, y2 - lw, z2 - lw)
            // 32
            addVert(x1 - lw, y2 + lw, z1 - lw)
            addVert(x1 - lw, y2 + lw, z2 + lw)
            addVert(x2 + lw, y2 + lw, z1 - lw)
            addVert(x2 + lw, y2 + lw, z2 + lw)
            // 36
            addVert(x1 + lw, y2 + lw, z1 + lw)
            addVert(x1 + lw, y2 + lw, z2 - lw)
            addVert(x2 - lw, y2 + lw, z1 + lw)
            addVert(x2 - lw, y2 + lw, z2 - lw)

            index(0)
            index(1)
            index(8)
            index(9)
            index(11)
            index(12)
            index(4)
            index(5)
            index(0)
            index(1)
            reset()

            index(1)
            index(3)
            index(13)
            index(17)
            index(12)
            index(16)
            index(5)
            index(7)
            index(1)
            index(3)
            reset()

            index(3)
            index(2)
            index(19)
            index(18)
            index(16)
            index(15)
            index(7)
            index(6)
            index(3)
            index(2)
            reset()

            index(2)
            index(0)
            index(14)
            index(10)
            index(15)
            index(11)
            index(6)
            index(4)
            index(2)
            index(0)
            reset()

            index(0)
            index(32)
            index(10)
            index(22)
            index(11)
            index(23)
            index(8)
            index(20)
            index(0)
            index(32)
            reset()

            index(1)
            index(33)
            index(9)
            index(21)
            index(12)
            index(24)
            index(13)
            index(25)
            index(1)
            index(33)
            reset()

            index(3)
            index(35)
            index(17)
            index(29)
            index(16)
            index(28)
            index(19)
            index(31)
            index(3)
            index(35)
            reset()

            index(2)
            index(34)
            index(18)
            index(30)
            index(15)
            index(27)
            index(14)
            index(26)
            index(2)
            index(34)
            reset()

            index(32)
            index(33)
            index(36)
            index(37)
            index(23)
            index(24)
            index(20)
            index(21)
            index(32)
            index(33)
            reset()

            index(33)
            index(35)
            index(37)
            index(39)
            index(24)
            index(28)
            index(25)
            index(29)
            index(33)
            index(35)
            reset()

            index(35)
            index(34)
            index(39)
            index(38)
            index(28)
            index(27)
            index(31)
            index(30)
            index(35)
            index(34)
            reset()

            index(34)
            index(32)
            index(38)
            index(36)
            index(27)
            index(23)
            index(26)
            index(22)
            index(34)
            index(32)
        } else {
            pos(x1 - lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x1 - lw, y1 + lw, z1 + lw)
            pos(x1 - lw, y1 + lw, z2 - lw)
            pos(x1 + lw, y1 + lw, z1 + lw)
            pos(x1 + lw, y1 + lw, z2 - lw)
            pos(x1 + lw, y1 - lw, z1 + lw)
            pos(x1 + lw, y1 - lw, z2 - lw)
            pos(x1 - lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x1 - lw, y1 - lw, z2 + lw)

            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x1 + lw, y1 + lw, z2 + lw)
            pos(x2 - lw, y1 + lw, z2 + lw)
            pos(x1 + lw, y1 + lw, z2 - lw)
            pos(x2 - lw, y1 + lw, z2 - lw)
            pos(x1 + lw, y1 - lw, z2 - lw)
            pos(x2 - lw, y1 - lw, z2 - lw)
            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y1 - lw, z2 + lw)

            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x2 + lw, y1 + lw, z2 - lw)
            pos(x2 + lw, y1 + lw, z1 + lw)
            pos(x2 - lw, y1 + lw, z2 - lw)
            pos(x2 - lw, y1 + lw, z1 + lw)
            pos(x2 - lw, y1 - lw, z2 - lw)
            pos(x2 - lw, y1 - lw, z1 + lw)
            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x2 + lw, y1 - lw, z1 - lw)

            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y1 - lw, z1 - lw)
            pos(x2 - lw, y1 + lw, z1 - lw)
            pos(x1 + lw, y1 + lw, z1 - lw)
            pos(x2 - lw, y1 + lw, z1 + lw)
            pos(x1 + lw, y1 + lw, z1 + lw)
            pos(x2 - lw, y1 - lw, z1 + lw)
            pos(x1 + lw, y1 - lw, z1 + lw)
            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y1 - lw, z1 - lw)

            pos(x1 - lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z1 - lw)
            pos(x1 + lw, y1 + lw, z1 - lw)
            pos(x1 + lw, y2 - lw, z1 - lw)
            pos(x1 + lw, y1 + lw, z1 + lw)
            pos(x1 + lw, y2 - lw, z1 + lw)
            pos(x1 - lw, y1 + lw, z1 + lw)
            pos(x1 - lw, y2 - lw, z1 + lw)
            pos(x1 - lw, y1 - lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z1 - lw)

            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x1 - lw, y2 + lw, z2 + lw)
            pos(x1 - lw, y1 + lw, z2 - lw)
            pos(x1 - lw, y2 - lw, z2 - lw)
            pos(x1 + lw, y1 + lw, z2 - lw)
            pos(x1 + lw, y2 - lw, z2 - lw)
            pos(x1 + lw, y1 + lw, z2 + lw)
            pos(x1 + lw, y2 - lw, z2 + lw)
            pos(x1 - lw, y1 - lw, z2 + lw)
            pos(x1 - lw, y2 + lw, z2 + lw)
            pos(x1 - lw, y2 + lw, z2 + lw)

            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)
            pos(x2 - lw, y1 + lw, z2 + lw)
            pos(x2 - lw, y2 - lw, z2 + lw)
            pos(x2 - lw, y1 + lw, z2 - lw)
            pos(x2 - lw, y2 - lw, z2 - lw)
            pos(x2 + lw, y1 + lw, z2 - lw)
            pos(x2 + lw, y2 - lw, z2 - lw)
            pos(x2 + lw, y1 - lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)

            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x2 + lw, y2 + lw, z1 - lw)
            pos(x2 + lw, y1 + lw, z1 + lw)
            pos(x2 + lw, y2 - lw, z1 + lw)
            pos(x2 - lw, y1 + lw, z1 + lw)
            pos(x2 - lw, y2 - lw, z1 + lw)
            pos(x2 - lw, y1 + lw, z1 - lw)
            pos(x2 - lw, y2 - lw, z1 - lw)
            pos(x2 + lw, y1 - lw, z1 - lw)
            pos(x2 + lw, y2 + lw, z1 - lw)
            pos(x2 + lw, y2 + lw, z1 - lw)

            pos(x1 - lw, y2 + lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z2 + lw)
            pos(x1 + lw, y2 + lw, z1 + lw)
            pos(x1 + lw, y2 + lw, z2 - lw)
            pos(x1 + lw, y2 - lw, z1 + lw)
            pos(x1 + lw, y2 - lw, z2 - lw)
            pos(x1 - lw, y2 - lw, z1 + lw)
            pos(x1 - lw, y2 - lw, z2 - lw)
            pos(x1 - lw, y2 + lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z2 + lw)
            pos(x1 - lw, y2 + lw, z2 + lw)

            pos(x1 - lw, y2 + lw, z2 + lw)
            pos(x1 - lw, y2 + lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)
            pos(x1 + lw, y2 + lw, z2 - lw)
            pos(x2 - lw, y2 + lw, z2 - lw)
            pos(x1 + lw, y2 - lw, z2 - lw)
            pos(x2 - lw, y2 - lw, z2 - lw)
            pos(x1 + lw, y2 - lw, z2 + lw)
            pos(x2 - lw, y2 - lw, z2 + lw)
            pos(x1 - lw, y2 + lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)

            pos(x2 + lw, y2 + lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z1 - lw)
            pos(x2 - lw, y2 + lw, z2 - lw)
            pos(x2 - lw, y2 + lw, z1 + lw)
            pos(x2 - lw, y2 - lw, z2 - lw)
            pos(x2 - lw, y2 - lw, z1 + lw)
            pos(x2 + lw, y2 - lw, z2 - lw)
            pos(x2 + lw, y2 - lw, z1 + lw)
            pos(x2 + lw, y2 + lw, z2 + lw)
            pos(x2 + lw, y2 + lw, z1 - lw)
            pos(x2 + lw, y2 + lw, z1 - lw)

            pos(x2 + lw, y2 + lw, z1 - lw)
            pos(x2 + lw, y2 + lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z1 - lw)
            pos(x2 - lw, y2 + lw, z1 + lw)
            pos(x1 + lw, y2 + lw, z1 + lw)
            pos(x2 - lw, y2 - lw, z1 + lw)
            pos(x1 + lw, y2 - lw, z1 + lw)
            pos(x2 - lw, y2 - lw, z1 - lw)
            pos(x1 + lw, y2 - lw, z1 - lw)
            pos(x2 + lw, y2 + lw, z1 - lw)
            pos(x1 - lw, y2 + lw, z1 - lw)
        }
        draw()
    }

    override fun inView(params: List<Double>): Boolean {
        val (x1, y1, z1, x2, y2, z2, _lw) = params
        val lw = _lw * 0.5 * 0.0625
        return false ||
                Frustum.test(x1 - lw, y1 - lw, z1 - lw) ||
                Frustum.test(x1 - lw, y1 - lw, z2 + lw) ||
                Frustum.test(x1 - lw, y2 + lw, z1 - lw) ||
                Frustum.test(x1 - lw, y2 + lw, z2 + lw) ||
                Frustum.test(x2 + lw, y1 - lw, z1 - lw) ||
                Frustum.test(x2 + lw, y1 - lw, z2 + lw) ||
                Frustum.test(x2 + lw, y2 + lw, z1 - lw) ||
                Frustum.test(x2 + lw, y2 + lw, z2 + lw)
    }

    override fun getVertexCount(params: List<Double>): Int = 40
    override fun getIndicesCount(params: List<Double>): Int = if (Renderer.USE_NEW_SHIT) 131 else 142
    override fun getDrawMode(params: List<Double>): Int = GL11.GL_TRIANGLE_STRIP
}